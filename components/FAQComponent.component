<apex:component controller="FAQComponentCtrl" allowDML="true">

  <apex:includeScript value="{!URLFOR($Resource.MktgToolboxResource, 'js/list.js')}"/>
  <apex:includeScript value="{!URLFOR($Resource.MktgToolboxResource, 'js/list.fuzzysearch.min.js')}"/>
  <apex:includeScript value="{!URLFOR($Resource.MktgToolboxResource, 'js/list.pagination.min.js')}"/>
  <apex:includeScript value="{!URLFOR($Resource.MktgToolboxResource, 'js/jquery.mobile.custom.min.js')}"/>

<apex:outputPanel id="FAQs">

<style type="text/css">
.loading_wrap{
            background-color: #444;
            height: 315.297px;
            opacity:0.65;
            filter: alpha(opacity=65);
            width:550px;
            text-align:center;
            position:absolute;
            color:#444;
        }
        .loading_img{
            background-color:#fff;
            color:#333;
            border:1px solid #ccc;
            left:50%; top:50%;
            opacity:1;
            filter: alpha(opacity=100);
            padding:10px;
            position:absolute;
            z-index:99999999;
        }
</style>

<script>
  $j = jQuery.noConflict();
  var loaded = 0;
  var questionList;
  $j(document).ready(function() {

    // prepareDialogs();

    $j('.accordion-section-title').click(function(e) {
      // Grab current anchor value
      var currentAttrValue = $j(this).attr('href');

      if($j(e.target).is('.active') || $j(e.target).is('.ui-icon-collapse')) {
        close_accordion_section();
      }else {
        close_accordion_section();

        // Add active class to section title
        $j(this).addClass('active');
        $j(this).find('span').addClass('ui-icon-collapse');
        // Open up the hidden content panel
        $j('.accordion ' + currentAttrValue).slideDown(300).addClass('open'); 

        var questionId = $j(this).closest('div').attr('id');
        Controller_FAQ.trackClicks(questionId, function(result, event) {
          if(event.type == 'exception') {
            alert(event.message);
          }
        });
      }
      e.preventDefault();
    });
    
    (function prepareDialogs(){
      // $j(function() {
        $j( "#question-submit-confirm" ).dialog({
          resizable: false,
          height:"250px", 
          width:"550px",
          maxWidth:800,
          autoOpen:false,
          modal: true,
          buttons: {
            "{!$Label.Submit}": function() {
              var textAreaId = document.getElementById('box').value;
              var questionTopic = $j('.questionTopic option:selected').text();
              createTask(textAreaId, questionTopic);                
                return false;
            },
            "{!$Label.CancelButton}": function() {
              $j( this ).dialog( "close" );
              resetModal();
              return false;
            }
          }
        });
        $j( "#question-submit-post" ).dialog({
          resizable: false,
          height:"250px", 
          width:"550px",
          maxWidth:800,
          autoOpen:false,
          modal: true,
          buttons: {
            "{!$Label.CloseButton}": function() {
              $j( this ).dialog( "close" ); 
              resetAccordion();               
              return false;
            }
          }
        });
        $j(":button:contains('{!$Label.Submit}')").button('disable');
      })();
    // }

    var listOptions = {
      valueNames: ['content', 'title'],
      plugins: [ ListFuzzySearch(), ListPagination() ],
      page: 10
    };
    questionList = new List('question-list', listOptions);

    questionList.on('updated', function() {
      if(questionList.matchingItems.length <= 1) {
        $j('.questionLink').show();
        if(questionList.matchingItems.length === 0) {
          $j('.accordion.list').addClass('noBorder');
        } else {
          $j('.accordion.list').removeClass('noBorder');
        }
      } else {
        $j('.accordion.list').removeClass('noBorder');
        $j('.questionLink').hide();
      }
    });

    //Disable auto focus for search box
    $j('.fuzzy-search').focus(function() {
      if(loaded <= 1){
        $j('.fuzzy-search').blur();
        loaded += 1;
      }
    });

    $j('.clear_input').hide();

    $j('.clear_input').on('click', function() {
      resetAccordion();
    });

    $j('.page').on('click', function() {
      close_accordion_section();
    });

    $j('.fuzzy-search').on('keyup keydown change', function() {
      triggerBtn($j(this));
    });

    $j('#box').on('keyup keydown change', function() {
      if(hasText($j(this))){
        $j(":button:contains('{!$Label.Submit}')").button('enable');
      } else {
        $j(":button:contains('{!$Label.Submit}')").button('disable');
      }
    });

    $j( ".questionTopic" ).change(function() {
      if($j(this).val() != 'none'){
        $j('#box').attr('disabled', false);
        if(hasText($j('#box'))){
          $j(":button:contains('{!$Label.Submit}')").button('enable');
        }
      } else {
        $j(":button:contains('{!$Label.Submit}')").button('disable');
        $j('#box').attr('disabled', true);
      }
    });

  });
  function resetModal() {
    $j('#box').val('');
    $j('.questionTopic').val($j(".questionTopic option:first").val());
    $j('#box').attr('disabled', true);
    $j(":button:contains('{!$Label.Submit}')").button('disable');
  }
  function resetAccordion() {
    $j('.fuzzy-search').val('').change();
    questionList.search();
    close_accordion_section();
  }
  function closeModal() {
    resetModal();
    $j( "#question-submit-confirm" ).dialog( "close" );
    $j( "#question-submit-post" ).dialog( "open" ); 
  }
  function openQuestionBox() {
    $j( "#question-submit-confirm" ).dialog( "open");
  }
  function close_accordion_section() {
    $j('.accordion .accordion-section-title').removeClass('active');
    $j('.accordion .accordion-section-content').slideUp(300).removeClass('open');
    $j('.accordion .ui-icon-custom').removeClass('ui-icon-collapse');
  }
  function triggerBtn(obj) {
    if (hasText(obj)) {
      $j('.clear_input').show();
    } else {
      $j('.clear_input').hide();
      obj.focus();
    }
  }
  function hasText(obj) {
    return obj.val().replace(/^\s+|\s+$/g, '').length > 0;
  }


</script>

<apex:actionFunction action="{!createNewCase}" name="createTask" rerender="true" oncomplete="closeModal();" status="actStatusId">
  <apex:param name="question" assignTo="{!newQuestion}" value="" />
  <apex:param name="topic" assignTo="{!questionTopic}" value="" />
</apex:actionFunction> 



<div  class="modal" id="question-submit-confirm" title="{!$Label.FAQSubmitTitle}">
    <div style="margin: 0 20px 0 20px;"><div>{!$Label.SelectQuestionTopicText}</div>
    <div>
    <select class="questionTopic" style="margin-top:10px;">
      <option value="none">{!$Label.SelectTopic}</option>
      <option value="marketing">{!$Label.MarketingTopic}</option>
      <option value="design">{!$Label.DesignTopic}</option>
      <option value="logos">{!$Label.LogosTopic}</option>
      <option value="promoitems">{!$Label.PromoItemsTopic}</option>
      <option value="literature">{!$Label.LiteratureTopic}</option>
      <option value="infohub">{!$Label.InfoHubTopic}</option>
    </select>
    </div>
    </div>
    <br />
    <div class="modalText">
      <textarea disabled="true" id="box" value="{!newQuestion}" placeholder="{!$Label.FAQTextPlaceholder}"/>
    </div>
    <br />
</div>

<div  class="modal" id="question-submit-post" title="{!$Label.FAQThanksTItle}"> 
    <br />
    <div class="modalText">
      <apex:actionStatus id="actStatusId" onstart="closeModal();">
        <apex:facet name="start" >
          <p><img src="../../img/loading32.gif" style="width:16px;"/></p>
        </apex:facet>
        <apex:facet name="stop" >
          <p>{!$Label.FAQThanksText}</p>         
        </apex:facet>
      </apex:actionStatus>
    </div>
    <br />
</div>

<input type="text" id="hiddenBox" style="display: none;" />

<div id="question-list">
  <div class="searchBar">
    <input type="text" class="fuzzy-search" id="search" placeholder="{!$Label.FAQSearchPlaceholder}" />
    <a class="clear_input" style="text-decoration:none !important;">Ã—</a>
  </div>
  <div class="accordion list">
    <apex:variable value="{!0}" var="index"/>
    <apex:repeat value="{!lstQues}" var="que">
    <apex:variable value="{!(index+1)}" var="index"/>
      <div class="accordion-section" id="{!que.Id}">
        <a class="accordion-section-title title" href="#accordion-{!index}" style="text-decoration:none;">{!que.Question__c}<span class="ui-icon-custom ui-icon-expand"></span></a>
        <div id="accordion-{!index}" class="accordion-section-content content">
          <p id="answer-text">
            <apex:outputText value="{!que.Answer__c}" escape="false"/>
          </p>
        </div>
      </div>
    </apex:repeat>      
  </div>
  <div class="questionLink">
    <a data-transition="pop" class="arrow" href="#" onclick="openQuestionBox(); return false;">{!$Label.FAQSubmitLink}</a>
  </div>
  <div class="pagination">
  </div>
</div>


</apex:outputPanel>
</apex:component>